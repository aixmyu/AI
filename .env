`.env`
.env
# ? Streamlit
STREAMLIT_GLOBAL_DEVELOPMENT_MODE=False

## ? Server variables
STREAMLIT_SERVER_HOST='localhost'
STREAMLIT_SERVER_PORT=80
STREAMLIT_SERVER_MAX_UPLOAD_SIZE=1000
STREAMLIT_SERVER_ENABLE_STATIC_SERVING=True

## ? Theme variables
STREAMLIT_BROWSER_SERVER_ADDRESS='localhost'
STREAMLIT_BROWSER_SERVER_PORT=80
STREAMLIT_BROWSER_GATHER_USAGE_STATS=False

## ? Theme variables
STREAMLIT_THEME_BASE="dark"
STREAMLIT_THEME_PRIMARY_COLOR="#5c49e1"
STREAMLIT_THEME_BACKGROUND_COLOR="#0E1117"
STREAMLIT_THEME_SECONDARY_BACKGROUND_COLOR="#373e75"
STREAMLIT_THEME_TEXT_COLOR="#FAFAFA"

`main.py`

import os
import streamlit as st
from dotenv import load_dotenv

load_dotenv()

options = [
    "global.developmentMode",
    "server.address",
    "server.port",
    "server.maxUploadSize",
    "server.enableStaticServing",
    "browser.serverAddress",
    "browser.serverPort",
    "browser.gatherUsageStats",
    "theme.base",
    "theme.primaryColor",
    "theme.backgroundColor",
    "theme.secondaryBackgroundColor",
    "theme.textColor"
]

st.header("Variables matching `STREAMLIT_*` in ENV")
env_matches = []
for entry in os.environ:
    if "STREAMLIT" in entry:
        env_matches.append(f"{entry}={os.getenv(entry)}")
st.write(env_matches)

st.header("Used variables, as read by `st.get_option()`")
option_matches = []
for option in options:
    option_matches.append(f"{option}={st.get_option(option)}")
st.write(option_matches)